Have IP address – confirmed could ping
Ran nmap with -sV -O commands to identify both port/versions and O/S.  It comes back with a giving up on port because retransmission cap hit (10).  I tried running it multiple times, always with same result.  Seemed like I let it sit forever, without “completing”… did a port scan on port 80 with the -p 80 option just to make sure the thing worked…  and then finally used the -v option for verbosity to see what was going on

While it was running, I tried using browser to get to site – get the Undergoing maintenance tag.
For some reason, I thought let’s check port 8080, and get the Apache Tomcat/9.0.7 webpage to come up.  Clicked server status and prompted for login – tried using single-quote to test for SQL injection and no-where… hit cancel and see mention of a default username tomcat and default password s3cret.  Thought score!  Of course, these didn’t work to login, nor were they successful for tryhackme

Nmap is STILL chugging along…  ugh!  Try running scan adding the --top-ports command setting to 10, and just doing a SynScan (no version/OS) – works like a champ!  Extend it to 50 and again quickly comes back with answers, and then 100 – again success.  What do I see?  A handful of both open and closed ports…  139 and 445 are both open suggesting SMB.  We also have port 80 & 8080 (which we already knew), and port 8009 – ajp13.  WTF is ajp13?  I google it – and see it’s a possible path for exploitation (https://ionize.com.au/exploiting-apache-tomcat-port-8009-using-apache-jserv-protocol/)

OK great – I’ll have it done in a jif!  I follow the steps, and all failed!
 
I still think I was on to something, but I realize I’ve way jumped the gun…  and nmap is STILL SCANNING!!!
OK – time to stop getting ahead of myself… what do they want?  Services exposed – running a standard nmap scan, not sure I’ve truly answered it, but again I did find a handful of services exposed (SSH, SMB, ajp13, http, http-proxy).  Is this it?  Dunno, but am proceeding onward

Next – finding the hidden directory on web server.  OK, I got this, dirb to the rescue!  Running dirb http://10.10.150.167 (IP of host), after running it finds a few results, including a folder named development.  Is that the directory that we’re looking for?  I type it in and sure enough, it is – success!

OK username & password…  Well, first, let’s browse to the development directory and see what we can find.  We see two files, dev.txt and j.txt.  Starting with the j.txt it makes mention of weak credentials in /etc/shadow and being able to easily crack the hash.  OK, sounds promising – possible directory traversal weakness?  But before we get too much further, let’s look at the dev.txt – it makes mention of struts and specifies a version # (2.5.12), along with mentioning SMB.  The communications are signed “J” and “K”, possible reference to their names?
SO… how do I get the usernames?  Well, I know SMB is enabled, and I know enum4linux can do some SMB scans, so let’s try it…  I run enum4linux by itself and get some help options – as I’m after users, I see using the -U parameter is to get userlist, so bingo.  I run enum4linux -U <IPADDR> and… I get an error about use of uninitialized value $users in the enum4linux.pl file… is somehow my 2019.3 Kali version contain an error?  I try and update but it’s apparently up-to-date…  ugh!

SO… I look at the hint.  It says to use SMB to find the username… duh!  That’s what I was trying to do!  So I run enum4linux again (and again, and again)… same option, same result.  I then try Google searching the error message that I got… couldn’t find anything helpful.
I then look at the enu4mlinux parameters once more… -a does all simple enumeration (including -U).  Alright, let’s try it… maybe something useful will come about?
It runs for a long, Long, LONG while… but not erroring-out, so maybe it’ll find something?  Finally it finishes… it finds Unix User’s kay and jan.
 

I try submitting kay and it’s the wrong answer… next try jan and success.  (I then try kay as the other user being asked for and again success).
OK… how do I brute-force password?
I try hydra (using the rockyou wordlist) specifying I’m trying to break for smb, but it nearly immediately gives an error about invalid account.  I review the parameters and am confident it’s right.  I then try medusa with the smbnt module… it immediately says success with password 123456.  I’m like this is awesome... until I realize it doesn’t work…  what am I missing?
What I’m missing is this is NOT a Windows box…  it’s seemingly some sort of *nix box…  so, how do I get in?  Oh yeah… ssh is open.   So I look-up how to use hydra with wordlist to crack ssh on jan’s account.  hydra -l jan -P /usr/share/wordlists/rockyou.txt <IPADDR> -t 16 ssh After a bit of time… success!
 
So let’s attempt to connect using our password.  ssh jan@<IPADDR> and use the newly found password – we’re in!  That and we can cross another item off the list – hooray!

Let’s poke around… are we in admin group?  No
Any interesting files in our directory?  No
Let’s back-up a directory… anything interesting?  We see the other user – kay.  Going into that folder, there’s a pass.bak – ok, that might be interesting.  But alas, no permissions to read the file.

SO… I made some good progress, but alas I’m stuck.  I’ve got 2 usernames & 1 password.   One of the questions (that doesn’t take an answer) is enumerating machine to find vectors for privesc.  I click Hint… Use privesc checklist or tool like LinEum.  OK… I google privesc checklist and come arosss https://book.hacktricks.xyz/linux-unix/privilege-escalation/interesting-groups-linux-pe.  No access to sudoers file.  Doing sudo su comes back with I’m not in sudoers file… Looking for suid binaries however yields something promising – vim.basic shows up.  
 
I’m able to run vim.basic pas.bak on the command line and open the password file!  Success!
Not only that, but I can also modify the sudoers file to include jan to be able to sudo 
 

Now I can sudo su root, go to /root and see a flag.txt, and can cat the flag.txt.  Success!
But there are a few things still outstanding… apache struts, the LinEnum (mentioned from the one hint), and clicking on the final hint to get the final password (which we already got), it mentions using john the ripper.  Hmm… we managed to get it successfully WITHOUT using john (or similar…)  so we are missing something.

I went ahead and tried running LinEnum – put a whole slew of info on the screen, but nothing “stood-out to me” (will have to play around with it sometime).
I also am hung-up on the apache struts… is it a red herring or is there something to it?  Doing a google search for apache struts 2.5.12 shows there are clear exploits avail.  But how do I get into it?  I came across https://www.exploit-db.com/exploits/42627, but 
One site showed how logging into the admin panel allows you to see the application paths… (https://samsclass.info/124/proj14/p10xstruts.htm).  I can’t get into the panel…  BUT… I know the version is 2.5.12, and on said page, I scroll down and see a mention of /struts2-rest-showcase-2.5.12.  I try browsing to it … http://<IPADDR>:8080/struts2-rest-showcase-2.5.12 and am taken to an orders page!  OK – I think I’m getting somewhere!  I then try using Metasploit and get exploit completed, but no session was created message.  I do some further searching and while I see examples of folks who have gotten meterpreter shell, it seemed like they were running it as virtual image in their own lab (not VPN’d in to tryhackme).  I did come across this walkthrough (https://www.embeddedhacker.com/2019/08/hacking-walkthrough-basic-pentesting/) who also was using tryhackme, and had the same outcome trying to gain access via struts.

And finally JtR…  the walk-thru above discovers .ssh folder under kay (which jan has access to read), and provides walk-thru on how to proceed with info embedded within.  Def recommend checking it out!

And this concludes my walk-thru.

 

